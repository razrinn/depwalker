name: CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  issues: write
  repository-projects: write

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  test-and-build:
    name: Test & Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20, 22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.11.0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Run tests with coverage
        if: matrix.node-version == 20
        run: pnpm test:coverage

      - name: Upload coverage to Codecov
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          files: ./coverage/lcov.info
          fail_ci_if_error: false
          verbose: true
          name: depwalker-coverage
          flags: unittests

      - name: Build project
        run: pnpm build

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test-and-build
    # Only run release on main branch pushes (not PRs)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.11.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm release
          title: 'Release: Version Packages'
          commit: 'chore: version packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Send notification if published
        if: steps.changesets.outputs.published == 'true'
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "üéâ Successfully published v$VERSION to npm!"
          echo "üì¶ Package: https://www.npmjs.com/package/depwalker"
          echo "üè∑Ô∏è Git tag v$VERSION was automatically created by changesets"
